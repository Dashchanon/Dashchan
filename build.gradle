buildscript {
	repositories {
		google()
		jcenter()
	}

	dependencies {
		classpath 'com.android.tools.build:gradle:3.6.4'
	}
}

allprojects {
	repositories {
		google()
		jcenter()
	}
}

apply plugin: 'com.android.application'

android {
	compileSdkVersion 29
	buildToolsVersion '29.0.3'
	ndkVersion '21.3.6528147'

	defaultConfig {
		versionCode 1037
		versionName '3.0.3'

		minSdkVersion 16
		targetSdkVersion 29
		ndk.abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86'

		buildConfigField 'String', 'URI_UPDATES', '"//raw.githubusercontent.com/' +
				'Mishiranu/Dashchan/master/update/data.json"'
		buildConfigField 'String', 'URI_THEMES', '"//raw.githubusercontent.com/' +
				'Mishiranu/Dashchan/master/update/themes.json"'
	}

	sourceSets.main {
		manifest.srcFile 'AndroidManifest.xml'
		java.srcDirs = ['src', 'src-api']
		resources.srcDirs = []
		aidl.srcDirs = ['src']
		renderscript.srcDirs = ['src']
		res.srcDirs = ['res']
		assets.srcDirs = ['assets']
		jni.srcDirs = []
		jniLibs.srcDir 'libs'
	}

	def locales = sourceSets.main.res.srcDirs
			.collectMany { (it.listFiles() ?: []) as Collection }
			.findAll { it.getName().startsWith("values-") && new File(it, "strings.xml").exists() }
			.collect { it.getName().with { it.substring(it.indexOf('-') + 1) } }.sort()
	defaultConfig {
		buildConfigField 'String[]', 'LOCALES', '{"' + locales.join('", "') + '"}'
		resConfigs locales
	}

	externalNativeBuild {
		ndkBuild {
			path 'jni/Android.mk'
		}
	}

	if (file('keystore.properties').exists()) {
		def keystoreProperties = new Properties()
		keystoreProperties.load(new FileInputStream(file('keystore.properties')))

		signingConfigs {
			general {
				storeFile file(keystoreProperties['store.file'])
				storePassword keystoreProperties['store.password']
				keyAlias keystoreProperties['key.alias']
				keyPassword keystoreProperties['key.password']
			}
		}

		buildTypes.debug.signingConfig signingConfigs.general
		buildTypes.release.signingConfig signingConfigs.general
	}

	buildTypes {
		debug {
			minifyEnabled false
		}
		release {
			minifyEnabled true
		}
		all {
			crunchPngs false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}

	packagingOptions {
		exclude '/lib/*/libavcodec.so'
		exclude '/lib/*/libavformat.so'
		exclude '/lib/*/libavutil.so'
		exclude '/lib/*/libswresample.so'
		exclude '/lib/*/libswscale.so'
		exclude '/lib/*/libyuv.so'
		exclude '/META-INF/*.version'
	}

	lintOptions {
		disable 'MissingTranslation', 'ValidFragment', 'ResourceType'
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}
}

dependencies {
	compileOnly 'org.ccil.cowan.tagsoup:tagsoup:1.2.1'
	implementation 'androidx.fragment:fragment:1.2.5'
	implementation 'androidx.recyclerview:recyclerview:1.1.0'
	implementation 'androidx.drawerlayout:drawerlayout:1.1.1'
	implementation 'androidx.webkit:webkit:1.3.0'
}
